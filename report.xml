<?xml version="1.0" encoding="UTF-8"?>

<checkstyle version="5.0">
  <file name="cmd/main.go">
    <error column="1" line="16" message="unnecessary trailing newline" severity="error" source="whitespace"></error>
    <error column="2" line="4" message="import &#39;banners_service/internal/app&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="5" message="import &#39;banners_service/pkg/config&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="6" message="import &#39;banners_service/pkg/logger&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
  </file>
  <file name="internal/app/app.go">
    <error column="12" line="18" message="Error return value of `app.Listen` is not checked" severity="error" source="errcheck"></error>
    <error column="34" line="14" message="unused-parameter: parameter &#39;logger&#39; seems to be unused, consider removing or renaming it as _" severity="warning" source="revive"></error>
    <error column="2" line="4" message="import &#39;banners_service/internal/router&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="6" message="import &#39;banners_service/pkg/logger&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="7" message="import &#39;banners_service/platform/database&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="9" message="import &#39;github.com/gofiber/fiber/v2&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="10" message="import &#39;github.com/gofiber/fiber/v2/middleware/cors&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="19" line="19" message="cors.Config is missing fields Next, AllowOriginsFunc, AllowMethods, AllowCredentials, ExposeHeaders, MaxAge" severity="error" source="exhaustruct"></error>
    <error column="2" line="16" message="assignments should only be cuddled with other assignments" severity="error" source="wsl"></error>
  </file>
  <file name="internal/handler/banner_create.go">
    <error column="2" line="22" message="Consider pre-allocating `tagIdsInt64`" severity="error" source="prealloc"></error>
    <error column="2" line="5" message="import &#39;banners_service/platform/database&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="9" message="import &#39;github.com/gofiber/fiber/v2&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="15" line="27" message="models.Banner is missing field ID" severity="error" source="exhaustruct"></error>
    <error column="2" line="23" message="S1011: should replace loop with `tagIdsInt64 = append(tagIdsInt64, response.TagIDs...)`" severity="error" source="gosimple"></error>
    <error column="19" line="12" message="parameter name &#39;c&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="16" line="16" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).JSON(data interface{}, ctype ...string) error" severity="error" source="wrapcheck"></error>
    <error column="16" line="20" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).JSON(data interface{}, ctype ...string) error" severity="error" source="wrapcheck"></error>
    <error column="10" line="37" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).JSON(data interface{}, ctype ...string) error" severity="error" source="wrapcheck"></error>
    <error column="5" line="18" message="assignments should only be cuddled with other assignments" severity="error" source="wsl"></error>
  </file>
  <file name="internal/handler/banner_create_test.go">
    <error column="38" line="16" message="unnecessary leading newline" severity="error" source="whitespace"></error>
    <error column="2" line="13" message="import &#39;github.com/stretchr/testify/assert&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="10" line="31" message="models.Banner is missing fields ID, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="9" line="1" message="package should be `handler_test` instead of `handler`" severity="error" source="testpackage"></error>
    <error column="30" line="47" message="&#34;POST&#34; can be replaced by http.MethodPost" severity="error" source="usestdlibvars"></error>
    <error column="6" line="41" message="variable name &#39;tt&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="2" line="20" message="only cuddled expressions if assigning variable or using from line above" severity="error" source="wsl"></error>
    <error column="3" line="52" message="expressions should not be cuddled with blocks" severity="error" source="wsl"></error>
  </file>
  <file name="internal/handler/banner_delete.go">
    <error column="2" line="5" message="import &#39;banners_service/internal/models&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="6" message="import &#39;banners_service/platform/database&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="32" line="23" message="models.Banner is missing fields ID, TagIDs, FeatureID, Content, IsActive, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="16" line="13" message="parameter name &#39;c&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="10" line="31" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).SendStatus(status int) error" severity="error" source="wrapcheck"></error>
    <error column="9" line="34" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).SendStatus(status int) error" severity="error" source="wrapcheck"></error>
  </file>
  <file name="internal/handler/banner_get.go">
    <error column="0" line="33" message="line is 103 characters" severity="error" source="lll"></error>
    <error column="75" line="37" message="unnecessary conversion" severity="error" source="unconvert"></error>
    <error column="34" line="15" message="mnd: Magic number: 10, in &lt;argument&gt; detected" severity="error" source="gomnd"></error>
    <error column="16" line="12" message="parameter name &#39;c&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="10" line="41" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).SendStatus(status int) error" severity="error" source="wrapcheck"></error>
  </file>
  <file name="internal/handler/banner_get_test.go">
    <error column="36" line="56" message="Error return value of `(*encoding/json.Decoder).Decode` is not checked" severity="error" source="errcheck"></error>
    <error column="0" line="57" message="line is 138 characters" severity="error" source="lll"></error>
    <error column="2" line="12" message="import &#39;github.com/stretchr/testify/assert&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="9" line="1" message="package should be `handler_test` instead of `handler`" severity="error" source="testpackage"></error>
    <error column="29" line="46" message="&#34;GET&#34; can be replaced by http.MethodGet" severity="error" source="usestdlibvars"></error>
    <error column="1" line="21" message="only cuddled expressions if assigning variable or using from line above" severity="error" source="wsl"></error>
  </file>
  <file name="internal/handler/banner_update.go">
    <error column="40" line="12" message="unnecessary leading newline" severity="error" source="whitespace"></error>
    <error column="1" line="60" message="named return &#34;out&#34; with type &#34;[]E&#34; found" severity="error" source="nonamedreturns"></error>
    <error column="2" line="24" message="declarations should never be cuddled" severity="error" source="wsl"></error>
    <error column="2" line="41" message="if statements should only be cuddled with assignments" severity="error" source="wsl"></error>
    <error column="2" line="44" message="if statements should only be cuddled with assignments" severity="error" source="wsl"></error>
    <error column="2" line="47" message="if statements should only be cuddled with assignments" severity="error" source="wsl"></error>
  </file>
  <file name="internal/handler/user_banner_get.go">
    <error column="0" line="18" message="line is 102 characters" severity="error" source="lll"></error>
    <error column="0" line="35" message="line is 103 characters" severity="error" source="lll"></error>
    <error column="42" line="14" message="unnecessary leading newline" severity="error" source="whitespace"></error>
    <error column="2" line="4" message="import &#39;banners_service/internal/middleware/cache&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="5" message="import &#39;banners_service/internal/models&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
  </file>
  <file name="internal/handler/user_banner_get_test.go">
    <error column="2" line="5" message="import &#39;banners_service/internal/models&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="14" message="import &#39;github.com/stretchr/testify/assert&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="9" line="1" message="package should be `handler_test` instead of `handler`" severity="error" source="testpackage"></error>
    <error column="29" line="58" message="&#34;GET&#34; can be replaced by http.MethodGet" severity="error" source="usestdlibvars"></error>
    <error column="2" line="64" message="expressions should not be cuddled with blocks" severity="error" source="wsl"></error>
  </file>
  <file name="internal/middleware/auth/auth.go">
    <error column="0" line="23" message="line is 113 characters" severity="error" source="lll"></error>
    <error column="0" line="28" message="line is 117 characters" severity="error" source="lll"></error>
    <error column="0" line="32" message="line is 104 characters" severity="error" source="lll"></error>
    <error column="0" line="37" message="line is 137 characters" severity="error" source="lll"></error>
    <error column="0" line="51" message="line is 101 characters" severity="error" source="lll"></error>
    <error column="0" line="52" message="line is 138 characters" severity="error" source="lll"></error>
    <error column="0" line="54" message="line is 133 characters" severity="error" source="lll"></error>
    <error column="0" line="62" message="line is 120 characters" severity="error" source="lll"></error>
    <error column="0" line="79" message="line is 110 characters" severity="error" source="lll"></error>
    <error column="0" line="84" message="line is 104 characters" severity="error" source="lll"></error>
    <error column="0" line="90" message="line is 128 characters" severity="error" source="lll"></error>
    <error column="0" line="95" message="line is 128 characters" severity="error" source="lll"></error>
    <error column="0" line="102" message="line is 120 characters" severity="error" source="lll"></error>
    <error column="2" line="6" message="import &#39;banners_service/pkg/utils&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="14" message="import &#39;github.com/golang-jwt/jwt/v5&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="15" line="64" message="fiber.Cookie is missing fields Path, Domain, MaxAge, HTTPOnly, SameSite, SessionOnly" severity="error" source="exhaustruct"></error>
    <error column="15" line="105" message="fiber.Cookie is missing fields Path, Domain, MaxAge, HTTPOnly, SameSite, SessionOnly" severity="error" source="exhaustruct"></error>
    <error column="12" line="118" message="fiber.Cookie is missing fields Path, Domain, MaxAge, Secure, HTTPOnly, SameSite, SessionOnly" severity="error" source="exhaustruct"></error>
    <error column="25" line="154" message="err113: do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unexpected signing method: %v\&#34;, jwtToken.Header[\&#34;alg\&#34;])&#34;" severity="error" source="goerr113"></error>
  </file>
  <file name="internal/middleware/auth/auth_test.go">
    <error column="0" line="19" message="Function &#39;TestAuth&#39; is too long (131 &gt; 60)" severity="error" source="funlen"></error>
    <error column="9" line="1" message="package should be `auth_test` instead of `auth`" severity="error" source="testpackage"></error>
    <error column="30" line="116" message="&#34;POST&#34; can be replaced by http.MethodPost" severity="error" source="usestdlibvars"></error>
    <error column="30" line="128" message="&#34;GET&#34; can be replaced by http.MethodGet" severity="error" source="usestdlibvars"></error>
    <error column="30" line="142" message="&#34;POST&#34; can be replaced by http.MethodPost" severity="error" source="usestdlibvars"></error>
    <error column="6" line="136" message="variable name &#39;tt&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="6" line="110" message="variable name &#39;tt&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="2" line="104" message="only cuddled expressions if assigning variable or using from line above" severity="error" source="wsl"></error>
  </file>
  <file name="internal/middleware/cache/cache.go">
    <error column="1" line="46" message="receiver-naming: receiver name c should be consistent with previous receiver name cach for allCache" severity="warning" source="revive"></error>
    <error column="2" line="9" message="import &#39;github.com/patrickmn/go-cache&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="23" line="28" message="ST1016: methods on the same type should have the same receiver name (seen 1x &#34;c&#34;, 1x &#34;cach&#34;)" severity="error" source="stylecheck"></error>
    <error column="10" line="31" message="error returned from external package is unwrapped: sig: func (*github.com/gofiber/fiber/v2.Ctx).Next() error" severity="error" source="wrapcheck"></error>
  </file>
  <file name="internal/models/banner.go">
    <error column="36" line="34" message="tag is not aligned, should be: gorm:&#34;type:integer[]&#34;       json:&#34;tag_ids&#34;" severity="error" source="tagalign"></error>
    <error column="18" line="36" message="tag is not aligned, should be: gorm:&#34;type:jsonb&#34;           json:&#34;content&#34;" severity="error" source="tagalign"></error>
    <error column="31" line="37" message="tag is not aligned, should be: gorm:&#34;default:true&#34;         json:&#34;is_active&#34;" severity="error" source="tagalign"></error>
    <error column="2" line="10" message="import &#39;github.com/lib/pq&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="16" line="28" message="err113: do not define dynamic errors, use wrapped static errors instead: &#34;errors.New(\&#34;incompatible type for JSONB\&#34;)&#34;" severity="error" source="goerr113"></error>
    <error column="9" line="22" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="16" line="26" message="error returned from external package is unwrapped: sig: func encoding/json.Unmarshal(data []byte, v any) error" severity="error" source="wrapcheck"></error>
    <error column="5" line="24" message="type switch statements should only be cuddled with variables switched" severity="error" source="wsl"></error>
  </file>
  <file name="internal/models/response.go">
    <error column="25" line="10" message="tag is not aligned, should be: json:&#34;name&#34;            validate:&#34;required&#34;" severity="error" source="tagalign"></error>
    <error column="25" line="11" message="tag is not aligned, should be: json:&#34;email&#34;           validate:&#34;required&#34;" severity="error" source="tagalign"></error>
    <error column="25" line="12" message="tag is not aligned, should be: json:&#34;password&#34;        validate:&#34;required,min=4&#34;" severity="error" source="tagalign"></error>
    <error column="18" line="18" message="tag is not aligned, should be: json:&#34;email&#34;    validate:&#34;required&#34;" severity="error" source="tagalign"></error>
    <error column="18" line="19" message="tag is not aligned, should be: json:&#34;password&#34; validate:&#34;required&#34;" severity="error" source="tagalign"></error>
    <error column="2" line="6" message="import &#39;github.com/google/uuid&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
  </file>
  <file name="internal/models/user.go">
    <error column="2" line="6" message="import &#39;github.com/go-playground/validator/v10&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="7" message="import &#39;github.com/google/uuid&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="23" line="45" message="type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors" severity="error" source="errorlint"></error>
    <error column="5" line="33" message="validate is a global variable" severity="error" source="gochecknoglobals"></error>
    <error column="2" line="53" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="2" line="44" message="only one cuddle assignment allowed before if statement" severity="error" source="wsl"></error>
    <error column="2" line="43" message="assignments should only be cuddled with other assignments" severity="error" source="wsl"></error>
  </file>
  <file name="internal/router/router.go">
    <error column="0" line="24" message="File is not `gofumpt`-ed" severity="error" source="gofumpt"></error>
    <error column="2" line="4" message="import &#39;banners_service/internal/handler&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="5" message="import &#39;banners_service/internal/middleware/auth&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="6" message="import &#39;banners_service/internal/middleware/cache&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="8" message="import &#39;github.com/gofiber/fiber/v2&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
  </file>
  <file name="pkg/config/config.go">
    <error column="0" line="3" message="File is not `gofmt`-ed with `-s`" severity="error" source="gofmt"></error>
    <error column="2" line="16" message="var-naming: struct field Ip should be IP" severity="warning" source="revive"></error>
    <error column="16" line="17" message="bad syntax for struct tag pair" severity="error" source="tagalign"></error>
    <error column="3" line="39" message="printf: log.Fatal call has possible Printf formatting directive %s" severity="error" source="govet"></error>
    <error column="3" line="44" message="printf: log.Fatal call has possible Printf formatting directive %f" severity="error" source="govet"></error>
    <error column="1" line="29" message="named return &#34;config&#34; with type &#34;*Config&#34; found" severity="error" source="nonamedreturns"></error>
  </file>
  <file name="pkg/logger/logger.go">
    <error column="45" line="20" message="slog.HandlerOptions is missing fields AddSource, ReplaceAttr" severity="error" source="exhaustruct"></error>
    <error column="45" line="22" message="slog.HandlerOptions is missing fields AddSource, ReplaceAttr" severity="error" source="exhaustruct"></error>
    <error column="45" line="24" message="slog.HandlerOptions is missing fields AddSource, ReplaceAttr" severity="error" source="exhaustruct"></error>
  </file>
  <file name="pkg/utils/jwt.go">
    <error column="0" line="4" message="File is not `gci`-ed with --skip-generated -s standard -s default" severity="error" source="gci"></error>
    <error column="0" line="8" message="File is not `gci`-ed with --skip-generated -s standard -s default" severity="error" source="gci"></error>
    <error column="0" line="12" message="File is not `gci`-ed with --skip-generated -s standard -s default" severity="error" source="gci"></error>
    <error column="0" line="11" message="File is not `gofumpt`-ed" severity="error" source="gofumpt"></error>
    <error column="0" line="13" message="File is not `gofumpt`-ed" severity="error" source="gofumpt"></error>
    <error column="2" line="5" message="import &#39;banners_service/pkg/config&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="9" message="import &#39;github.com/golang-jwt/jwt/v5&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="60" line="27" message="non-wrapping format verb for fmt.Errorf. Use `%w` to format errors" severity="error" source="errorlint"></error>
    <error column="2" line="29" message="return with no blank line before" severity="error" source="nlreturn"></error>
  </file>
  <file name="platform/database/init_data.go">
    <error column="19" line="11" message="captLocal: `DB&#39; should not be capitalized" severity="error" source="gocritic"></error>
    <error column="29" line="28" message="G601: Implicit memory aliasing in for loop." severity="medium" source="gosec"></error>
    <error column="29" line="52" message="G601: Implicit memory aliasing in for loop." severity="medium" source="gosec"></error>
    <error column="9" line="13" message="models.User is missing fields Model, ID, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="9" line="19" message="models.User is missing fields Model, ID, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="9" line="37" message="models.Banner is missing fields ID, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="9" line="43" message="models.Banner is missing fields ID, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="24" line="45" message="mnd: Magic number: 2, in &lt;assign&gt; detected" severity="error" source="gomnd"></error>
  </file>
  <file name="platform/database/postgres.go">
    <error column="7" line="30" message="Error return value of `DB.DB` is not checked" severity="error" source="errcheck"></error>
    <error column="1" line="51" message="unnecessary trailing newline" severity="error" source="whitespace"></error>
    <error column="2" line="5" message="import &#39;banners_service/pkg/config&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="17" line="22" message="gorm.Config is missing fields SkipDefaultTransaction, NamingStrategy, FullSaveAssociations, Logger, NowFunc, DryRun, PrepareStmt, DisableAutomaticPing, DisableForeignKeyConstraintWhenMigrating, IgnoreRelationshipsWhenMigrating, DisableNestedTransaction, AllowGlobalUpdate, QueryFields, CreateBatchSize, TranslateError, ClauseBuilders, ConnPool, Dialector, Plugins" severity="error" source="exhaustruct"></error>
    <error column="24" line="42" message="models.User is missing fields Model, ID, Name, Email, Password, Role, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="24" line="46" message="models.Banner is missing fields ID, TagIDs, FeatureID, Content, IsActive, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="27" line="68" message="models.User is missing fields Model, ID, Name, Email, Password, Role, CreatedAt, UpdatedAt" severity="error" source="exhaustruct"></error>
    <error column="5" line="15" message="DB is a global variable" severity="error" source="gochecknoglobals"></error>
    <error column="5" line="67" message="expressions should not be cuddled with blocks" severity="error" source="wsl"></error>
    <error column="5" line="69" message="only one cuddle assignment allowed before if statement" severity="error" source="wsl"></error>
    <error column="2" line="43" message="only one cuddle assignment allowed before if statement" severity="error" source="wsl"></error>
  </file>
</checkstyle>
